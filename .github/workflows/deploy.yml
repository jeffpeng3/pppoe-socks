name: 建置並發布 PPPoE 工具容器

on:
  push:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch: # 允許手動觸發

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: 建置並推送映像
    runs-on: ubuntu-latest

    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v5

    - name: 設定 Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 登入 GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 擷取server中繼資料
      id: server_meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: 擷取client中繼資料
      id: client_meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-client
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - uses: robinraju/release-downloader@v1.12
      with:
        repository: "go-gost/gost"
        latest: true
        fileName: "gost_*_linux_amd64v3.tar.gz"
        extract: true

    - name: 建置並推送 Docker 映像
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.server_meta.outputs.tags }}
        labels: ${{ steps.server_meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    
    - name: 建置並推送 Docker 映像
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./client/Dockerfile
        push: true
        tags: ${{ steps.client_meta.outputs.tags }}
        labels: ${{ steps.client_meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max